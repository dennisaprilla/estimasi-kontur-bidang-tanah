clear; clc; close all;

addpath('/home/dennis/Documents/MATLAB/dcm-algorithm-matlab-master/src');
addpath('/home/dennis/Documents/MATLAB/dcm-algorithm-matlab-master/quaternion_library');

load('quaternionGT_sensor2earth.mat');

%% Read data dan Bikin Noise

% Read IMU text
[Accelerometer, Gyroscope, Magnetometer] = readIMUtext('IMU.txt');

% ceritanya time delta
sample_period = 1/256;
    
% init values of omega
Omega_P = [0 0 0];
Omega_I = [0 0 0];

% buat nampung R
R = zeros(3,3,length(Gyroscope));

% buat observasi
observations = 10;
DCMDurationTimes = zeros(3, observations);
DCMDurationTimes_mean = [];

%%

for observation = 1:observations
    
    % init values of omega
    Omega_P = [0 0 0];
    Omega_I = [0 0 0];

    tic;
    for i = 1:length(Gyroscope)
        if i==1
            % init the dcm matrix
            [ pitch, roll, yaw, dcm_init ] = reset_fusion( Accelerometer(i,1), ...
                                                           Accelerometer(i,2), ...
                                                           Accelerometer(i,3), ...
                                                           Magnetometer(i,1),  ...
                                                           Magnetometer(i,2),  ...
                                                           Magnetometer(i,3));
        else

            % update the dcm matrix with the previous one and the values
            [ pitch, roll, yaw, ...
              dcm_init, ...
              Omega_I,  ...
              Omega_P ] = dcm_algorithm ( dcm_init, ...
                                          Accelerometer(i,1), ...
                                          Accelerometer(i,2), ...
                                          Accelerometer(i,3), ...
                                          Gyroscope(i,1)*(pi/180), ...
                                          Gyroscope(i,2)*(pi/180), ...
                                          Gyroscope(i,3)*(pi/180), ...
                                          Magnetometer(i,1), ...
                                          Magnetometer(i,2), ...
                                          Magnetometer(i,3), ...
                                          sample_period, ...
                                          pitch, roll, yaw, ...
                                          Omega_I, Omega_P );
        end
        
    end
    DCMDurationTimes(1,observation) = toc;

end

disp('Tahap 1 selesai');

%%

for observation = 1:observations
    
    % init values of omega
    Omega_P = [0 0 0];
    Omega_I = [0 0 0];

    tic;
    for i = 1:length(Gyroscope)
        if i==1
            % init the dcm matrix
            [ pitch, roll, yaw, dcm_init ] = reset_fusion( Accelerometer(i,1), ...
                                                           Accelerometer(i,2), ...
                                                           Accelerometer(i,3), ...
                                                           Magnetometer(i,1),  ...
                                                           Magnetometer(i,2),  ...
                                                           Magnetometer(i,3));
        else

            % update the dcm matrix with the previous one and the values
            [ pitch, roll, yaw, ...
              dcm_init, ...
              Omega_I,  ...
              Omega_P ] = dcm_algorithm ( dcm_init, ...
                                          Accelerometer(i,1), ...
                                          Accelerometer(i,2), ...
                                          Accelerometer(i,3), ...
                                          Gyroscope(i,1)*(pi/180), ...
                                          Gyroscope(i,2)*(pi/180), ...
                                          Gyroscope(i,3)*(pi/180), ...
                                          Magnetometer(i,1), ...
                                          Magnetometer(i,2), ...
                                          Magnetometer(i,3), ...
                                          sample_period, ...
                                          pitch, roll, yaw, ...
                                          Omega_I, Omega_P );
        end
        
        R(:,:,i) = dcm_init;
    end
    DCMDurationTimes(2,observation) = toc;

end

disp('Tahap 2 selesai');

%%

for observation = 1:observations
    
    % init values of omega
    Omega_P = [0 0 0];
    Omega_I = [0 0 0];

    tic;
    for i = 1:length(Gyroscope)
        if i==1
            % init the dcm matrix
            [ pitch, roll, yaw, dcm_init ] = reset_fusion( Accelerometer(i,1), ...
                                                           Accelerometer(i,2), ...
                                                           Accelerometer(i,3), ...
                                                           Magnetometer(i,1),  ...
                                                           Magnetometer(i,2),  ...
                                                           Magnetometer(i,3));
        else

            % update the dcm matrix with the previous one and the values
            [ pitch, roll, yaw, ...
              dcm_init, ...
              Omega_I,  ...
              Omega_P ] = dcm_algorithm ( dcm_init, ...
                                          Accelerometer(i,1), ...
                                          Accelerometer(i,2), ...
                                          Accelerometer(i,3), ...
                                          Gyroscope(i,1)*(pi/180), ...
                                          Gyroscope(i,2)*(pi/180), ...
                                          Gyroscope(i,3)*(pi/180), ...
                                          Magnetometer(i,1), ...
                                          Magnetometer(i,2), ...
                                          Magnetometer(i,3), ...
                                          sample_period, ...
                                          pitch, roll, yaw, ...
                                          Omega_I, Omega_P );
        end
        
        R(:,:,i) = transpose(dcm_init);
    end
    DCMDurationTimes(3,observation) = toc;

end

disp('Tahap 3 selesai');

%%
DCMDurationTimes_mean = mean(DCMDurationTimes,2)';

save('DCMDuration.mat', 'DCMDurationTimes', 'DCMDurationTimes_mean', 'R');